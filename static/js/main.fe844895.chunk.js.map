{"version":3,"sources":["assets/images/license-plate-default.png","assets/images/license-plate-taxi.png","assets/images/license-plate-army.png","assets/images/license-plate-diplomatic.png","assets/images/license-plate-police.png","assets/images/license-plate-transit.png","assets/images/license-plate-default-2.png","assets/images/license-plate-tractor-2.png","assets/images/license-plate-moped.png","assets/images/license-plate-antique.png","assets/images/license-plate-sport.png","components/phonesList/index.js","components/dutyTrafficPoliceAdress/index.js","components/regionInfoModal/index.js","components/emptyCountryList/index.js","components/licensePlatesList/index.js","configs/country.js","components/countryList/index.js","components/selectCountry/index.js","configs/index.js","components/searchAlert/index.js","components/searchBar/index.js","panels/Home.js","components/colorfulLicensePlates/index.js","components/diferentFormLicensePlates/index.js","components/withoutFlagLicensePlates/index.js","helpers/index.js","panels/Note.js","components/finesDetail/index.js","panels/Fines.js","components/tabbar/index.js","App.js","sw.js","index.js"],"names":["module","exports","__webpack_require__","p","PhonesList","_ref","region","regionPhones","phones","get","map","item","index","react_default","a","createElement","es6","key","expandable","href","concat","before","phone_outline_default","title","getRegionPhones","DutyTrafficPoliceAdress","workTime","workTimes","getWorkTime","meta","adress","multiline","target","rel","place_default","RegionInfoModal","setModal","_useState","useState","_useState2","Object","slicedToArray","activeTab","setActiveTab","statsIsEmpty","carCount","postionByCarCount","checkIsEmptyStat","activeModal","id","onClose","dynamicContentHeight","header","left","IS_PLATFORM_ANDROID","onClick","cancel_default","right","IS_PLATFORM_IOS","dismiss_default","name","theme","selected","description","indicator","mode","phonesList","dutyTrafficPoliceAdress","EmptyCountryList","icon","hide_outline_default","LicensePlatesList","list","showRegionInfo","licensePlatesList","codes","join","listIsEmpty","length","Fragment","emptyCountryList","COUNTRY_LIST","data","require","CountryList","setCountryCode","selectedCountry","setActiveView","regionViewName","countries","asideContent","done_default","fill","SelectCountry","countryViewName","country","find","getCountryName","top","placeholder","DARK_THEME_IDS","SearchAlert","layout","size","className","clear_default","width","height","SearchBar","setQuerySearch","querySearch","value","onChange","e","query","replace","searchAlert","Home","modal","_useState3","_useState4","countryCode","_useState5","_useState6","activeView","useEffect","window","addEventListener","removeEventListener","regionList","search","toLowerCase","countryData","filter","tags","indexOf","getRegionList","activePanel","searchBar","components_selectCountry","components_licensePlatesList","regionInfoModal","history","pushState","PanelHeaderBack_default","countryList","licencePlateList","image","TaxiImage","ArmyImage","DiplomatImage","PoliceImage","TransitImage","colorfulLicensePlates","src","DefaultNumber","alt","DefaultImage","TractorImage","MopedImage","ClassicIamge","SportImage","diferentFormLicensePlates","withoutFlagLicensePlates","hideTabbar","tabbar","document","getElementsByClassName","style","display","showTabbar","NOTE_LIST","panel","Note","scheme","setActivePanel","panelHistory","setPanelHistory","goBack","toConsumableArray","pop","vkBridge","send","noteList","push","updateHistory","onSwipeBack","components_colorfulLicensePlates","components_diferentFormLicensePlates","components_withoutFlagLicensePlates","FinesDetail","offenseArticles","articleNumber","react_markdown_default","source","articleText","escapeHtml","disallowedTypes","articleSanctions","finesData","Fines","detailPanelData","setDetailPanelData","openDetailPanel","finesList","app_id","finesDetail","go","data-story","text","note_default","video_fill_none_default","report_default","App","story","setStory","colorScheme","setColorScheme","isOnline","useConnection","NoConnectionModal_es","caption","actionText","VKWebAppUpdateConfig","isString","isDark","status_bar_style","action_bar_color","schemeAttribute","createAttribute","body","attributes","setNamedItem","vkEvents","subscribe","detail","type","console","log","unsubscribe","activeStory","components_tabbar","event","scrollTo","behavior","panels_Note","panels_Home","panels_Fines","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","isLocalhost","Boolean","location","hostname","match","URL","process","origin","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","root","getElementById","mVKMiniAppsScrollHelper","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.fe844895.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/license-plate-default.b9f12846.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-taxi.88d1aaf3.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-army.a8d3fb5c.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-diplomatic.fb5b44c1.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-police.0ec7f2e8.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-transit.8cfbc2aa.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-default-2.2ac462be.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-tractor-2.0ff03f39.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-moped.9517d2a0.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-antique.cb79fd72.png\";","module.exports = __webpack_public_path__ + \"static/media/license-plate-sport.f7039ed2.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoRow, List, Cell } from '@vkontakte/vkui';\nimport Icon28PhoneOutline from '@vkontakte/icons/dist/28/phone_outline';\nimport get from 'lodash/get';\n\n\nconst PhonesList = ({ region }) => {\n\n    const getRegionPhones = () => {\n        const phones = get(region , 'meta.phones', null);\n\n        if (!phones) {\n            return <Cell\n            >\n                Нет информации\n            </Cell>\n        }\n\n        return phones.map((item, index) => \n            <Cell\n                key={index}\n                expandable={true}\n                href={`tel:${item}`}\n                before={<Icon28PhoneOutline />}\n            >\n                <InfoRow title={index === 0 ? 'Телефон' : ''}>\n                    {item}\n                </InfoRow>\n            </Cell>\n        )\n    };\n\n    const regionPhones = getRegionPhones();\n\n    return (\n        <List>\n            {regionPhones} \n        </List>\n    )\n};\n\nPhonesList.propTypes = {\n    region: PropTypes.object.isRequired,\n}\n\nexport default PhonesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { List, Cell, InfoRow } from '@vkontakte/vkui';\nimport Icon28Place from '@vkontakte/icons/dist/28/place';\n\nconst DutyTrafficPoliceAdress = ({ region }) => {\n\n    const getWorkTime = () => {\n        const workTimes = get(region , 'meta.workTime', null);\n\n        if (!workTimes) return [];\n\n        return workTimes.map((item, index) => \n            <Cell\n                key={index}\n            >\n                <InfoRow title={index === 0 ? 'Часы работы' : ''}>\n                    {item}\n                </InfoRow>\n            </Cell>\n        )\n    };\n\n    const workTime = getWorkTime();\n\n    return (\n        <List>\n            {region.meta.adress &&\n                <Cell \n                    multiline\n                    expandable={true}\n                    href={`https://www.google.ru/maps/search/${region.meta.adress}/`}\n                    target=\"_blank\"\n                    rel=\"nofollow noopener\"\n                    before={<Icon28Place />}\n                >\n                    <InfoRow title=\"Адрес\">\n                        {region.meta.adress}\n                    </InfoRow>\n                </Cell>\n            }\n\n            {region.meta.workTime && workTime}\n        </List>\n    )\n};\n\nDutyTrafficPoliceAdress.propTypes = {\n    region: PropTypes.object.isRequired,\n}\n\nexport default DutyTrafficPoliceAdress;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { ModalRoot, ModalPage, ModalPageHeader, Group, List, Cell, Counter, PanelHeaderButton, Tabs, TabsItem, Div, InfoRow } from '@vkontakte/vkui';\nimport { IS_PLATFORM_ANDROID, IS_PLATFORM_IOS } from '@vkontakte/vkui/dist/lib/platform';\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\n\n// Components\nimport PhonesList from '../phonesList';\nimport AdressList from '../dutyTrafficPoliceAdress';\n\nconst INFO_MODAL_ID = 'info-modal';\nconst INFO_TAB = 'info';\nconst TRAFFIC_POLICE = 'traffic-police';\n\nconst RegionInfoModal = ({ setModal, region }) => {\n    const [activeTab, setActiveTab] = useState(INFO_TAB);\n\n    /**\n     * @returns {Boolean}\n     */\n    const checkIsEmptyStat = () => {\n        const carCount = get(region, 'meta.carCount', null);\n        const postionByCarCount = get(region, 'meta.postionByCarCount', null);\n\n        return !carCount && !postionByCarCount;\n    };\n\n    const statsIsEmpty = checkIsEmptyStat();\n\n    return (\n        <ModalRoot activeModal={INFO_MODAL_ID}>\n            <ModalPage\n                id={INFO_MODAL_ID}\n                onClose={() => setModal(null)}\n                dynamicContentHeight={true}\n                header={\n                    <ModalPageHeader\n                        left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={() => setModal(null)}><Icon24Cancel /></PanelHeaderButton>}\n                        right={IS_PLATFORM_IOS && <PanelHeaderButton onClick={() => setModal(null)}><Icon24Dismiss /></PanelHeaderButton>}\n                    >\n                        {region.name}\n                    </ModalPageHeader>\n                }\n            >\n\n            <Div>\n                <Tabs theme=\"light\">\n                    <TabsItem\n                        onClick={() => setActiveTab(INFO_TAB)}\n                        selected={activeTab === INFO_TAB}\n                    >\n                        О регионе\n                    </TabsItem>\n\n                    <TabsItem\n                        onClick={() => setActiveTab(TRAFFIC_POLICE)}\n                        selected={activeTab === TRAFFIC_POLICE}\n                    >\n                        Дежурная часть\n                    </TabsItem>\n                </Tabs>\n            </Div>\n\n            {activeTab === INFO_TAB &&\n                <Group title=\"Статистика по региону\" description=\"Учитываются только легковые автомобили. Дата обновления: 25.06.2019\">\n                    {!statsIsEmpty && \n                        <List>\n                            <Cell \n                                description=\"На 1000 человек.\"\n                                indicator={<Counter mode=\"primary\">{region.meta.carCount}</Counter>}\n                            >\n                                Кол-во машин\n                            </Cell>\n                            <Cell \n                                description=\"По кол-ву машин.\"\n                                indicator={<Counter mode=\"primary\">{region.meta.postionByCarCount}</Counter>}\n                            >\n                                Занимаемое место\n                            </Cell>\n                        </List>\n                    }\n\n                    {statsIsEmpty &&\n                        <Div>\n                            <InfoRow title=\"\">\n                                Для данного региона статистика недоступна.\n                            </InfoRow>\n                        </Div>\n                    }\n                </Group>\n            }\n\n            {activeTab === TRAFFIC_POLICE &&\n                <Group title=\"Информация\">\n                    <PhonesList region={region} />\n                    <AdressList region={region} />\n                </Group>\n            }\n            </ModalPage>\n        </ModalRoot>\n    );\n};\n\nRegionInfoModal.propTypes = {\n    setModal: PropTypes.func.isRequired,\n    region: PropTypes.object.isRequired,\n}\n\nexport default RegionInfoModal;","import React from 'react';\nimport { Placeholder } from '@vkontakte/vkui';\nimport Icon56HideOutline from '@vkontakte/icons/dist/56/hide_outline';\n\nconst EmptyCountryList = () => (\n    <Placeholder\n        icon={<Icon56HideOutline />}\n        title=\"Регион не найден\"\n    >\n        Попробуйте ввести название или номер региона.\n    </Placeholder>\n);\n\nexport default EmptyCountryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group, List, Cell } from '@vkontakte/vkui';\n\n// Components\nimport EmptyList from '../emptyCountryList';\n\nconst LicensePlatesList = ({ list, showRegionInfo }) => {\n\n    /**\n     * @param {Array} codes\n     * @returns {String}\n     */\n    const getCodes = codes => {\n        return codes.join(', ');\n    };\n\n    /**\n     * @returns {Array}\n     */\n    const getLicensePlatesList = () => {\n        return list.map(item =>\n\t\t\t<Cell \n\t\t\t\tmultiline\n\t\t\t\texpandable\n\t\t\t\tkey={item.name}\n\t\t\t\tdescription={`Код региона: ${getCodes(item.codes)}`}\n\t\t\t\tonClick={() => showRegionInfo(item)}\n\t\t\t>\n\t\t\t\t{item.name}\n\t\t\t</Cell>\n\t\t)\n    };\n\n    const licensePlatesList = getLicensePlatesList();\n    const listIsEmpty = list.length === 0;\n\n    return (\n        <>\n            {!listIsEmpty &&\n                <Group>\n                    <List>\n                        {licensePlatesList}\n                    </List>\n                </Group>\n            }\n\n            {listIsEmpty && <EmptyList /> }\n        </>\n    );\n};\n\nLicensePlatesList.propTypes = {\n    list: PropTypes.array.isRequired,\n    showRegionInfo: PropTypes.func.isRequired,\n};\n\nexport default LicensePlatesList;","const ru = require('../data/licence-plates/ru.json');\nconst uk = require('../data/licence-plates/uk.json');\nconst uz = require('../data/licence-plates/uz.json');\nconst by = require('../data/licence-plates/by.json');\nconst kz = require('../data/licence-plates/kz.json');\nconst eu = require('../data/licence-plates/eu.json');\n\nexport const COUNTRY_LIST = [\n    {\n        key: 'ru',\n        name: 'Россия',\n        data: ru,\n    },\n    {\n        key: 'uk',\n        name: 'Украина',\n        data: uk,\n    },\n    {\n        key: 'uz',\n        name: 'Узбекистан',\n        data: uz,\n    },\n    {\n        key: 'by',\n        name: 'Беларусь',\n        data: by,\n    },\n    {\n        key: 'kz',\n        name: 'Казахстан',\n        data: kz,\n    },\n    {\n        key: 'eu',\n        name: 'Страны Европы',\n        data: eu,\n    },\n];\n\nexport const DEFAULT_COUNTRY = 'ru';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group, List, Cell } from '@vkontakte/vkui';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\n// Configs\nimport { COUNTRY_LIST } from '../../configs/country'; \n\nconst CountryList = ({ setCountryCode, selectedCountry, setActiveView, regionViewName }) => {\n\n    /**\n     * @param {String} key\n     */\n    const selectCountry = (key) => {\n        setCountryCode(key);\n        setActiveView(regionViewName);\n    }\n\n    const getCountryList = () => {\n        return COUNTRY_LIST.map(item =>\n            <Cell \n                key={item.key}\n                onClick={() => selectCountry(item.key)}\n                asideContent={selectedCountry === item.key ? <Icon24Done fill=\"var(--accent)\" /> : null}\n            >\n                {item.name}\n            </Cell>    \n        )\n    };\n\n    const countries = getCountryList();\n\n    return (\n        <Group>\n            <List>\n                {countries}\n            </List>\n        </Group>\n    );\n};\n\nCountryList.propTypes = {\n    setCountryCode: PropTypes.func.isRequired,\n    setActiveView: PropTypes.func.isRequired,\n    selectedCountry: PropTypes.string.isRequired,\n    regionViewName: PropTypes.string.isRequired,\n};\n\nexport default CountryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormLayout, SelectMimicry } from '@vkontakte/vkui';\nimport get from 'lodash/get';\n\n// Configs\nimport { COUNTRY_LIST } from '../../configs/country';\n\nconst SelectCountry = ({ setActiveView, countryViewName, selectedCountry }) => {\n\n    /**\n     * @returns {String}\n     */\n    const getCountryName = () => {\n        const country = COUNTRY_LIST.find(item => item.key === selectedCountry);\n        const countryName = get(country, 'name', '');\n\n        return countryName;\n    }\n\n    const country = getCountryName();\n\n    return (\n        <FormLayout>\n            <SelectMimicry\n                top=\"Выберите страну\"\n                placeholder=\"Не выбрана\"\n                onClick={() => setActiveView(countryViewName)}\n            >\n                {country}\n            </SelectMimicry>\n        </FormLayout>\n    );\n};\n\nSelectCountry.propTypes = {\n    setActiveView: PropTypes.func.isRequired,\n    countryViewName: PropTypes.string.isRequired,\n    selectedCountry: PropTypes.string.isRequired,\n};\n\nexport default SelectCountry;","export const DARK_THEME_IDS = ['client_dark', 'space_gray'];\nexport const DEFAULT_COLOR_SCHEME = 'bright_light';\nexport const MAX_SEARCH_LENGTH = 100;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Snackbar, Avatar } from '@vkontakte/vkui';\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\n\n// Configs\nimport { MAX_SEARCH_LENGTH } from '../../configs';\n\nconst SearchAlert = ({ setModal }) => {\n    return (\n        <Snackbar\n            layout=\"vertical\"\n            onClose={() => setModal(null)}\n            before={<Avatar size={24} className=\"snackbarIcon\"><Icon16Clear fill=\"#fff\" width={14} height={14} /></Avatar>}\n        >\n            Максимальная длина поиска: {MAX_SEARCH_LENGTH} символов\n        </Snackbar>\n    )\n};\n\nSearchAlert.propTypes = {\n    setModal: PropTypes.func.isRequired,\n};\n\nexport default SearchAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Search } from '@vkontakte/vkui';\n\n// Components\nimport SearchAlert from '../searchAlert';\n\n// Configs\nimport { MAX_SEARCH_LENGTH } from '../../configs';\n\nconst SearchBar = ({ setQuerySearch, querySearch, setModal }) => {\n\n    /**\n\t * @param {String} query\n\t * @returns {Mixed}\n\t */\n\tconst validateSearchQuery = query => {\n\t\tif (!query.length) return false;\n\t\tif (!query.replace(/\\s/g, '').length) return false;\n\t\tif (query.length > MAX_SEARCH_LENGTH) return setModal(\n\t\t\t<SearchAlert setModal={setModal} />\n\t\t);\n\n\t\treturn true;\n\t};\n\n    /**\n\t * @param {Object} e\n     * @returns {Mixed}\n\t */\n\tconst searchOnChange = e => {\n\t\tconst { target: {\n\t\t\tvalue,\n\t\t}} = e;\n\n\t\tif (!value.length) return setQuerySearch('');\n\t\tif (!validateSearchQuery(value)) return false;\n\t\t\n\t\treturn setQuerySearch(value);\n\t};\n\n    return (\n        <Search\n            value={querySearch}\n            onChange={searchOnChange}\n            placeholder=\"Введите номер региона\"\n        />\n    );\n};\n\nSearchBar.propTypes = {\n    querySearch: PropTypes.string,\n    setQuerySearch: PropTypes.func.isRequired,\n    setModal: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Root, View, Panel, PanelHeader } from '@vkontakte/vkui';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\n// Components\nimport RegionInfoModal from '../components/regionInfoModal';\nimport LicensePlatesList from '../components/licensePlatesList';\nimport SelectCountryFromList from '../components/countryList';\nimport SelectCountry from '../components/selectCountry';\nimport SearchBar from '../components/searchBar';\n\n// Configs\nimport { DEFAULT_COUNTRY, COUNTRY_LIST } from '../configs/country';\n\nconst COUNTRY_VIEW = 'country-view';\n\nconst Home = ({ id, modal, setModal }) => {\n\tconst [querySearch, setQuerySearch] = useState('');\n\tconst [countryCode, setCountryCode] = useState(DEFAULT_COUNTRY);\n\tconst [activeView, setActiveView] = useState(id);\n\n\t/**\n     * Only Android device, support back button event\n     */\n    useEffect(() => {\n        window.addEventListener('popstate', () => setModal(null), false);\n\n        return () => {\n            window.removeEventListener('popstate', () => setModal(null), false);\n        };\n    });\n\n\tuseEffect(() => {\n\t\tif (querySearch) return setQuerySearch('');\n\t}, [activeView]);\n\n\t/**\n\t * @param {Object} region\n\t */\n\tconst showRegionInfo = region => {\n\t\tsetModal(\n\t\t\t<RegionInfoModal setModal={setModal} region={region} />\n\t\t);\n\n\t\twindow.history.pushState({}, '', region);\n\t};\n\n\n\t/**\n\t * @param {String} country\n\t * @returns {Array}\n\t */\n\tconst getRegionList = () => {\n\t\tconst search = querySearch.toLowerCase();\n\t\tconst countryData = COUNTRY_LIST.find(item => item.key === countryCode);\n\t\t\n\t\tconst result = countryData ? countryData.data.filter(item => {\n\t\t\tconst tags = item.tags.join(',').toLowerCase();\n\t\t\treturn tags.indexOf(search) > -1;\n\t\t}) : [];\n\n\t\treturn result;\n\t};\n\n\tconst regionList = getRegionList();\n\n\treturn (\n\t\t<Root activeView={activeView}>\n\t\t\t<View \n\t\t\t\tid={id} \n\t\t\t\tactivePanel={id} \n\t\t\t\tmodal={modal}\n\t\t\t>\n\t\t\t\t<Panel id={id}>\n\t\t\t\t\t<PanelHeader>Коды регионов</PanelHeader>\n\n\t\t\t\t\t<SearchBar \n\t\t\t\t\t\tquerySearch={querySearch}\n\t\t\t\t\t\tsetQuerySearch={setQuerySearch}\n\t\t\t\t\t\tsetModal={setModal}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SelectCountry \n\t\t\t\t\t\tsetActiveView={setActiveView}\n\t\t\t\t\t\tcountryViewName={COUNTRY_VIEW}\n\t\t\t\t\t\tselectedCountry={countryCode}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<LicensePlatesList \n\t\t\t\t\t\tlist={regionList}\n\t\t\t\t\t\tshowRegionInfo={showRegionInfo}\n\t\t\t\t\t/>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\n\t\t\t<View \n\t\t\t\tid={COUNTRY_VIEW} \n\t\t\t\tactivePanel={COUNTRY_VIEW}\n\t\t\t>\n\t\t\t\t<Panel id={COUNTRY_VIEW}>\n\t\t\t\t\t<PanelHeader\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={() => setActiveView(id)} />}\n\t\t\t\t\t>\n\t\t\t\t\t\tВыбор страны\n\t\t\t\t\t</PanelHeader>\n\n\t\t\t\t\t<SelectCountryFromList \n\t\t\t\t\t\tsetCountryCode={setCountryCode}\n\t\t\t\t\t\tsetActiveView={setActiveView}\n\t\t\t\t\t\tregionViewName={id}\n\t\t\t\t\t\tselectedCountry={countryCode}\n\t\t\t\t\t/>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t</Root>\n\t)\n};\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n\tscheme: PropTypes.string.isRequired,\n\tmodal: PropTypes.any,\n    setModal: PropTypes.func,\n};\n\nexport default Home;","import React from 'react';\nimport { Group, List, Cell, Div } from '@vkontakte/vkui';\n\n// Graphics\nimport DefaultNumber from '../../assets/images/license-plate-default.png';\nimport TaxiImage from '../../assets/images/license-plate-taxi.png';\nimport ArmyImage from '../../assets/images/license-plate-army.png';\nimport DiplomatImage from '../../assets/images/license-plate-diplomatic.png';\nimport PoliceImage from '../../assets/images/license-plate-police.png';\nimport TransitImage from '../../assets/images/license-plate-transit.png';\n\nconst licencePlateList = [\n    {\n        name: 'Маршрутные ТС',\n        image: TaxiImage,\n    },\n    {\n        name: 'Военные ТС',\n        image: ArmyImage,\n    },\n    {\n        name: 'ТС дипломатических миссий',\n        image: DiplomatImage,\n    },\n    {\n        name: 'ТС МВД России',\n        image: PoliceImage,\n    },\n    {\n        name: 'Транзитные ТС',\n        image: TransitImage,\n    }\n];\n\nconst colorfulLicensePlates = () => (\n    <>\n        <Group>\n            <Div className=\"noteText\">\n                <p>\n                    В Российской Федерации большинство регистрационных знаков — стандартные знаки образца 1993 года, вид которых определён ГОСТ Р 50577-93 (приказ от 30 июля 1993 года № 362 о новых государственных регистрационных знаках транспортных средств). \n                </p>\n\n                <div className=\"noteText__image\">\n                    <img src={DefaultNumber} alt=\"\" />\n                </div>\n\n                <p>\n                    Номерные знаки маршрутных ТС, военных ТС, ТС дипломатических миссий, ТС МВД России имеют формат и/или размеры, немного отличающиеся от стандартного.\n                </p>\n            </Div>\n        </Group>\n\n        {licencePlateList.map((item, index) => \n            <Group title={item.name} key={index}>\n                <List>\n                    <Cell>\n                        <img className=\"cellImage\" src={item.image} alt=\"\" />\n                    </Cell>\n                </List>\n            </Group>\n        )}\n    </>\n);\n\nexport default colorfulLicensePlates;\n","import React from 'react';\nimport { Group, List, Cell, Div } from '@vkontakte/vkui';\n\n// Graphics\nimport DefaultImage from '../../assets/images/license-plate-default-2.png';\nimport TractorImage from '../../assets/images/license-plate-tractor-2.png';\nimport MopedImage from '../../assets/images/license-plate-moped.png';\nimport ClassicIamge from '../../assets/images/license-plate-antique.png';\nimport SportImage from '../../assets/images/license-plate-sport.png';\n\nconst licencePlateList = [\n    {\n        name: 'ТС с нестандартным креплением',\n        image: DefaultImage,\n    },\n    {\n        name: 'Тракторы',\n        image: TractorImage,\n    },\n    {\n        name: 'Мопеды',\n        image: MopedImage,\n    },\n    {\n        name: 'Классические авто',\n        image: ClassicIamge,\n    },\n    {\n        name: 'Спортивные авто',\n        image: SportImage,\n    },\n];\n\nconst diferentFormLicensePlates = () => (\n    <>\n        <Group>\n            <Div className=\"noteText\">\n                <p>\n                    Номера разных форм можно получить для тракторов, спортивных, классических автомобилей, а также для мототехники.\n                    С недавнего времени в этот список входят автомобили с нестандартным креплением.\n                </p>\n            </Div>\n        </Group>\n\n        {licencePlateList.map((item, index) => \n            <Group title={item.name} key={index}>\n                <List>\n                    <Cell>\n                        <img className=\"cellImage\" src={item.image} alt=\"\" />\n                    </Cell>\n                </List>\n            </Group>\n        )}\n    </>\n);\n\nexport default diferentFormLicensePlates;\n","import React from 'react';\nimport { Div, Group } from '@vkontakte/vkui';\n\nconst withoutFlagLicensePlates = () => (\n    <Group>\n        <Div className=\"noteText\">\n            <h3>Номера без флага в России: что означают, можно ли ездить?</h3>\n\n            <p>\n                Как выглядит государственный регистрационный знак известно каждому водителю. \n                Однако в последние годы на дорогах России стали появляться автомобили с необычными номерными табличками: на них отсутствует традиционный триколор.\n                Что это за явление и считается ли установка подобных символов законной? \n                Кто имеет право на получение автомобильных номеров без изображения государственного флага?\n            </p>\n\n            <h3>\n                Стандарт регистрационных знаков на машине\n            </h3>\n\n            <p>\n                Сегодня порядок изготовления регистрационных знаков для машин регулирует ГОСТ Р 50577-93. \n                Документ подразделяет транспортные средства на группы, для каждой из которых предусмотрен индивидуальный формат таблички. \n                Согласно стандарту, любой номер должен содержать цифры и буквы, которые располагаются на белом поле в определенном порядке. \n                Для большинства типов техники допускается нанесение на знак изображения флага России.\n\n                Таким образом, наличие триколора, вопреки распространенному мнению, не является обязательным. \n                Это значит, что использование автомобилистами табличек без него полностью законно. \n            </p>\n\n            <img src=\"https://avatars.mds.yandex.net/get-zen_doc/44972/pub_5c25c6057a90a300abfc3eb9_5c25c6110cfbc500ab75ee37/scale_1200\" alt=\"\" />\n\n            Источник: <a href=\"https://www.rudorogi.ru/articles/traffic-laws/car-numbers-without-flag.html\" target=\"_blank\" rel=\"noopener noreferrer\">RuDorogi.ru</a>\n        </Div>\n    </Group>\n);\n\nexport default withoutFlagLicensePlates;\n","import isString from 'lodash/isString';\nimport { DARK_THEME_IDS } from '../configs';\n\n/**\n * @param {String} scheme\n * @returns {Boolean}\n */\nexport const isDark = scheme => {\n    if (!isString(scheme)) return false;\n\n    return DARK_THEME_IDS.indexOf(scheme) !== -1;\n};\n\n/**\n * @returns {String}\n */\nexport const hideTabbar = () => {\n    const tabbar = document.getElementsByClassName('Tabbar')[0];\n    if (!tabbar) return '';\n\n    return tabbar.style.display = 'none';\n}\n\n/**\n * @returns {String}\n */\nexport const showTabbar = () => {\n    const tabbar = document.getElementsByClassName('Tabbar')[0];\n    if (!tabbar) return '';\n\n    return tabbar.style.display = 'flex';\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Panel, PanelHeader, Group, List, Cell, ConfigProvider } from '@vkontakte/vkui';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\nimport vkBridge from '@vkontakte/vk-bridge';\n\n// Components\nimport ColorfulPanelContent from '../components/colorfulLicensePlates';\nimport DiferentFormPanelContent from '../components/diferentFormLicensePlates';\nimport WithoutFlagPanelConent from '../components/withoutFlagLicensePlates';\n\n// Helpers\nimport { hideTabbar, showTabbar } from '../helpers';\n\nconst COLORFUL_PANEL = 'colorful-reg-plates-panel';\nconst FORM_PANEL = 'form-factor-panel';\nconst WITHOUT_FLAG_PANEL = 'reg-plates-without-flag-panel';\n\nconst NOTE_LIST = [\n    {\n        id: 1,\n        name: 'Цветные номера',\n        description: 'Кому их выдают и чем отличаются?',\n        panel: COLORFUL_PANEL,\n    },\n    {\n        id: 2,\n        name: 'Номера разных форм',\n        description: 'Можно получить прямоугольный номер?',\n        panel: FORM_PANEL,\n    },\n    {\n        id: 3,\n        name: 'Номера без флага РФ',\n        description: 'Как получить и какие преимущества дают?',\n        panel: WITHOUT_FLAG_PANEL,\n    }\n]\n\nconst Note = ({ id, scheme, modal }) => {\n    const [activePanel, setActivePanel] = useState(id);\n    const [panelHistory, setPanelHistory] = useState([id]);\n\n    /**\n     * Only Android device, support back button event\n     */\n    useEffect(() => {\n        window.addEventListener('popstate', goBack, false);\n\n        return () => {\n            window.removeEventListener('popstate', goBack, false);\n        };\n    });\n\n    useEffect(() => {\n        if (activePanel !== id) hideTabbar();\n\n        return () => {\n            showTabbar();\n        };\n    }, [activePanel]);\n\n    /**\n     * Method required for only support iOSSwipeBack\n     */\n    const goBack = () => {\n        const history = [...panelHistory];\n        history.pop();\n\n        const activePanel = history[history.length - 1];\n\n        if (activePanel === id) {\n            vkBridge.send('VKWebAppDisableSwipeBack');\n        }\n\n        setPanelHistory(history);\n        setActivePanel(activePanel);\n    }\n    \n    /**\n     * Method required for only support iOSSwipeBack\n     * @param {String} target\n     */\n    const updateHistory = target => {\n        const history = [...panelHistory];\n        history.push(target);\n\n        if (activePanel === id) {\n            vkBridge.send('VKWebAppEnableSwipeBack');\n        }\n\n        window.history.pushState({}, '', target);\n        setPanelHistory(history);\n        setActivePanel(target);\n    }\n\n    const getNoteList = () => {\n        return NOTE_LIST.map(item =>\n            <Cell\n                key={item.id}\n                description={item.description}\n                expandable \n                onClick={() => updateHistory(item.panel)}\n            >\n                {item.name}\n            </Cell>\n        )\n    }\n\n    const noteList = getNoteList();\n\n    return (\n        <ConfigProvider scheme={scheme}>\n            <View \n                id={id} \n                activePanel={activePanel}\n                onSwipeBack={goBack}\n                history={panelHistory}\n                modal={modal}\n            >\n                <Panel id={id}>\n                    <PanelHeader>Заметки</PanelHeader>\n\n                    <Group title=\"Заметки об автомобильных номерах\" description=\"Описаны автомобильные номера РФ\">\n                        <List>\n                            {noteList}\n                        </List>\n                    </Group>\n                </Panel>\n\n                <Panel id={COLORFUL_PANEL}>\n                    <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\n                        Цветные номера\n                    </PanelHeader>\n                    \n                    <ColorfulPanelContent />\n                </Panel>\n\n                <Panel id={FORM_PANEL}>\n                    <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\n                        Номера разных форм\n                    </PanelHeader>\n                    \n                    <DiferentFormPanelContent />\n                </Panel>\n\n                <Panel id={WITHOUT_FLAG_PANEL}>\n                    <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\n                        Номера без флага РФ\n                    </PanelHeader>\n                    <WithoutFlagPanelConent />\n                </Panel>\n            </View>\n        </ConfigProvider>\n    )\n};\n\nNote.propTypes = {\n    id: PropTypes.string.isRequired,\n    scheme: PropTypes.string.isRequired,\n    modal: PropTypes.any,\n    setModal: PropTypes.func,\n};\n\nexport default Note;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group, List, Cell, InfoRow } from '@vkontakte/vkui';\nimport ReactMarkdown from 'react-markdown';\n\n\nconst FinesDetail = ({ item }) => {\n\n    const getArticleList = () => {\n        return item.offenseArticles.map(item => \n            <Group \n                title={`Статья ${item.articleNumber}`} \n                key={item.articleNumber}\n            >\n                <List>\n                    <Cell multiline>\n                        <InfoRow title=\"Правонарушение\">\n                            <ReactMarkdown \n                                source={item.articleText} \n                                escapeHtml={false} \n                                disallowedTypes={[\n                                    'link',\n                                    'image',\n                                    'linkReference',\n                                    'imageReference',\n                                ]} \n                            />\n                        </InfoRow>\n                    </Cell>\n\n                    <Cell multiline>\n                        <InfoRow title=\"Санкции и меры обеспечения производства\">\n                            <ReactMarkdown \n                                source={item.articleSanctions} \n                                escapeHtml={false} \n                                disallowedTypes={[\n                                    'link',\n                                    'image',\n                                    'linkReference',\n                                    'imageReference',\n                                ]} \n                            />\n                        </InfoRow>\n                    </Cell>\n                </List>\n            </Group>\n        )\n    }\n\n    const articleList = getArticleList();\n\n    return articleList;\n};\n\nFinesDetail.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default FinesDetail;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Panel, PanelHeader, PanelHeaderButton, Group, List, Cell, ConfigProvider } from '@vkontakte/vkui';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\nimport vkBridge from '@vkontakte/vk-bridge';\n\n// Components\nimport FinesDetail from '../components/finesDetail';\n\n// Helpers\nimport { hideTabbar, showTabbar } from '../helpers';\n\n// Data\nconst finesData = require('../data/fines/ru.json');\n\nconst FINES_APP_ID = 6253254;\nconst FINES_APP_ICON = 'https://sun9-7.userapi.com/c848520/v848520804/1d16eb/YrT2oK8WQMI.jpg';\nconst FINES_DETAIL_PANEL = 'fines-detail-panel';\n\nconst Fines = ({ id, scheme, modal }) => {\n    const [activePanel, setActivePanel] = useState(id);\n    const [panelHistory, setPanelHistory] = useState([id]);\n    const [detailPanelData, setDetailPanelData] = useState({});\n    \n\n    /**\n     * Only Android device, support back button event\n     */\n    useEffect(() => {\n        window.addEventListener('popstate', goBack, false);\n\n        return () => {\n            window.removeEventListener('popstate', goBack, false);\n        };\n    });\n\n    useEffect(() => {\n        if (activePanel !== id) hideTabbar();\n\n        return () => {\n            showTabbar();\n        };\n    }, [activePanel]);\n\n    /**\n     * Method required for only support iOSSwipeBack\n     */\n    const goBack = () => {\n        const history = [...panelHistory];\n        history.pop();\n\n        const activePanel = history[history.length - 1];\n\n        if (activePanel === id) {\n            vkBridge.send('VKWebAppDisableSwipeBack');\n        }\n\n        setPanelHistory(history);\n        setActivePanel(activePanel);\n    }\n    \n    /**\n     * Method required for only support iOSSwipeBack\n     * @param {String} target\n     */\n    const updateHistory = target => {\n        const history = [...panelHistory];\n        history.push(target);\n\n        if (activePanel === id) {\n            vkBridge.send('VKWebAppEnableSwipeBack');\n        }\n\n        window.history.pushState({}, '', target);\n        setPanelHistory(history);\n        setActivePanel(target);\n    }\n    \n    /**\n     * @returns {ReactDOM}\n     */\n    const getFinesList = () => {\n        return finesData.map(item => \n            <Cell\n                key={item.id}\n                expandable={true}\n                onClick={() => openDetailPanel(item)}\n            >\n                {item.name}\n            </Cell>    \n        )\n    };\n\n    /**\n     * @returns {Object}\n     */\n    const openCheckFinesApp = () => {\n        return vkBridge.send('VKWebAppOpenApp', {\n            app_id: FINES_APP_ID,\n        });\n    };\n\n    /**\n     * @param {Object} item\n     */\n    const openDetailPanel = item => {\n        setDetailPanelData(item);\n        updateHistory(FINES_DETAIL_PANEL);\n    };\n\n    const finesList = getFinesList();\n\n    return (\n        <ConfigProvider scheme={scheme}>\n            <View \n                id={id} \n                activePanel={activePanel}\n                onSwipeBack={goBack}\n                history={panelHistory}\n                modal={modal}\n            >\n                <Panel id={id}>\n                    <PanelHeader\n                        left={\n                            <PanelHeaderButton onClick={openCheckFinesApp}>\n                                <img src={FINES_APP_ICON} className=\"Icon openFinesAppIcon\" alt=\"fines app\" />\n                            </PanelHeaderButton>\n                        }\n                    >\n                        КоАП РФ\n                    </PanelHeader>\n\n                    <Group title=\"Тематика\">\n                        <List>\n                            {finesList}\n                        </List>\n                    </Group>\n                </Panel>\n\n                <Panel id={FINES_DETAIL_PANEL}>\n                    <PanelHeader\n                        left={<PanelHeaderBack onClick={goBack} />}\n                    >\n                        {detailPanelData.name}\n                    </PanelHeader>\n\n                    <FinesDetail item={detailPanelData} />\n                </Panel>\n            </View>\n        </ConfigProvider>\n    )\n};\n\nFines.propTypes = {\n    id: PropTypes.string.isRequired,\n    scheme: PropTypes.string.isRequired,\n    modal: PropTypes.any,\n    setModal: PropTypes.func,\n};\n\nexport default Fines;\n","import React from 'react';\nimport { Tabbar, TabbarItem } from '@vkontakte/vkui';\n\n// Graphics\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\nimport Icon24VideoFillNone from '@vkontakte/icons/dist/24/video_fill_none';\nimport Icon24Report from '@vkontakte/icons/dist/24/report';\n\nconst tabbar = ({ go, selected }) => (\n    <Tabbar>\n        <TabbarItem\n            onClick={go}\n            selected={selected === 'note'}\n            data-story=\"note\"\n            text=\"Заметки\"\n        >\n            <Icon24Note />\n        </TabbarItem>\n\n        <TabbarItem\n            onClick={go}\n            selected={selected === 'home'}\n            data-story=\"home\"\n            text=\"Коды регионов\"\n        >\n            <Icon24VideoFillNone />\n        </TabbarItem>\n\n        <TabbarItem\n            onClick={go}\n            selected={selected === 'fines'}\n            data-story=\"fines\"\n            text=\"КоАП РФ\"\n        >\n            <Icon24Report />\n        </TabbarItem>\n    </Tabbar>\n);\n\nexport default tabbar;\n","import React, { useState, useEffect } from 'react';\nimport { Epic } from '@vkontakte/vkui';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport get from 'lodash/get';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport NoConnectionModal from 'vkui-no-connection-modal';\nimport useConnection from 'vkui-no-connection-modal/lib/useConnection';\n\nimport './assets/fonts/fonts.css';\nimport './assets/styles/main.scss';\n\n// Views\nimport Home from './panels/Home';\nimport Note from './panels/Note';\nimport Fines from './panels/Fines';\n\n// Components\nimport Tabbar from './components/tabbar';\n\n// helpers\nimport { isDark } from './helpers';\nimport { DEFAULT_COLOR_SCHEME } from './configs';\n\nconst DEFAULT_STORY = 'home';\n\nconst App = () => {\n\tconst [story, setStory] = useState(DEFAULT_STORY);\n\tconst [colorScheme, setColorScheme] = useState(DEFAULT_COLOR_SCHEME);\n\tconst [modal, setModal] = useState(null);\n\tconst isOnline = useConnection();\n\n\tuseEffect(() => {\n        if (!isOnline) return setModal(\n            <NoConnectionModal \n                title=\"Нет сети\"\n                caption=\"Похоже, что у Вас проблемы с интернет соединением.\"\n                actionText=\"Проверить соединение\"\n                onClose={() => setModal(null)}\n            />\n        );\n \n        return setModal(null);\n\t}, [isOnline]);\n\t\n\t/**\n\t * @param {String} scheme\n\t */\n\tconst VKWebAppUpdateConfig = scheme => {\n\t\tif (!isDark(scheme)) {\n\t\t\tvkBridge.send('VKWebAppSetViewSettings', {\n\t\t\t\tstatus_bar_style: 'light', \n\t\t\t\taction_bar_color: '#8b44f7',\n\t\t\t});\n\t\t}\n\n\t\tsetColorScheme(scheme);\n\n\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\tschemeAttribute.value = scheme;\n\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t}\n\n\tuseEffect(() => {\n\t\tconst vkEvents = vkBridge.subscribe(e => {\n\t\t\tswitch(e.detail.type) {\n\t\t\t\tcase 'VKWebAppUpdateConfig':\n\t\t\t\t\tconst scheme = get(e, 'detail.data.scheme', DEFAULT_COLOR_SCHEME);\n\t\t\t\t\tVKWebAppUpdateConfig(scheme);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type, e.detail.data);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tvkBridge.unsubscribe(vkEvents);\n\t\t};\n\t}, []);\n\n\t/**\n\t * @param {Object} event \n\t */\n\tconst updateStory = event => {\n\t\tconst story = get(event, 'currentTarget.dataset.story', DEFAULT_STORY);\n\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\n\t\treturn setStory(story);\n\t};\n\n\treturn (\n\t\t<Epic \n\t\t\tactiveStory={story} \n\t\t\ttabbar={\n\t\t\t\t<Tabbar go={updateStory} selected={story} />\n\t\t\t}\n\t\t>\n\t\t\t<Note \n\t\t\t\tid=\"note\" \n\t\t\t\tscheme={colorScheme} \n\t\t\t\tmodal={modal} \n\t\t\t\tsetModal={setModal}\n\t\t\t/>\n\n\t\t\t<Home \n\t\t\t\tid=\"home\" \n\t\t\t\tscheme={colorScheme} \n\t\t\t\tmodal={modal} \n\t\t\t\tsetModal={setModal} \n\t\t\t/>\n\n\t\t\t<Fines \n\t\t\t\tid=\"fines\" \n\t\t\t\tscheme={colorScheme} \n\t\t\t\tmodal={modal} \n\t\t\t\tsetModal={setModal} \n\t\t\t/>\n\t\t</Epic>\n\t);\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nvkBridge.send('VKWebAppInit', {});\nregisterServiceWorker();\n\nconst root = document.getElementById('root');\nmVKMiniAppsScrollHelper(root);\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}